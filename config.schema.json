{
  "pluginAlias": "HTTP-LIGHTBULB",
  "pluginType": "accessory",
  "singular": true,
  "headerDisplay": "HTTP Lightbulb Accessory",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Name",
        "type": "string",
				"required": true,
        "default": "HTTP Lightbulb"
      },
      "onUrl": {
        "type": "string",
        "title": "onUrl",
        "required": true,
        "placeholder": "http://localhost/on"
      },
      "offUrl": {
        "type": "string",
        "title": "offUrl",
        "required": true,
        "placeholder": "http://localhost/off"
      },
      "statusUrl": {
        "type": "string",
        "title": "statusUrl",
        "required": true,
        "placeholder": "http://localhost/status"
      },
      "statusPattern": {
        "type": "string",
        "title": "Power Status Pattern (RegExp)",
        "placeholder": "1"
      },
      "brightness": {
        "title": "Brightness",
        "type": "object",
        "properties": {
          "setUrl": {
            "type": "string",
            "title": "setUrl",
            "required": true,
            "placeholder": "http://localhost/bri/%s"
          },
          "statusUrl": {
            "type": "string",
            "title": "statusUrl",
            "placeholder": "http://localhost/status"
          },
          "unit": {
            "type": "string",
            "enum": ["percent", "rgb"],
            "placeholder": "percent",
            "title": "Unit"
          },
          "statusPattern": {
            "type": "string",
            "title": "Status Pattern (RegExp)",
            "placeholder": "([0-9]{1,3})"
          },
          "patternGroupToExtract": {
            "type": "integer",
            "title": "Pattern Group To Extract",
            "placeholder": 1
          },
          "withholdPowerUpdate": {
            "type": "boolean",
            "title": "Withhold Power Update",
            "placeholder": false
          }
        }
      },
      "hue": {
        "title": "Hue",
        "type": "object",
        "properties": {
          "setUrl": {
            "type": "string",
            "title": "setUrl",
            "required": true,
            "placeholder": "http://localhost/hue/%s"
          },
          "statusUrl": {
            "type": "string",
            "title": "statusUrl",
            "required": true,
            "placeholder": "http://localhost/status"
          },
          "unit": {
            "type": "string",
            "enum": ["hsv", "zigbee"],
            "placeholder": "hsv",
            "title": "Unit"
          },
          "statusPattern": {
            "type": "string",
            "title": "Status Pattern (RegExp)",
            "placeholder": "([0-9]{1,3})"
          },
          "patternGroupToExtract": {
            "type": "integer",
            "title": "Pattern Group To Extract",
            "placeholder": 1
          }
        }
      },
      "saturation": {
        "title": "Saturation",
        "type": "object",
        "properties": {
          "setUrl": {
            "type": "string",
            "title": "setUrl",
            "required": true,
            "placeholder": "http://localhost/sat/%s"
          },
          "statusUrl": {
            "type": "string",
            "title": "statusUrl",
            "placeholder": "http://localhost/status"
          },
          "unit": {
            "type": "string",
            "enum": ["percent", "rgb"],
            "placeholder": "percent",
            "title": "Unit"
          },
          "statusPattern": {
            "type": "string",
            "title": "Status Pattern (RegExp)",
            "placeholder": "([0-9]{1,3})"
          },
          "patternGroupToExtract": {
            "type": "integer",
            "title": "Pattern Group To Extract",
            "placeholder": 1
          }
        }
      },
      "colorTemperature": {
        "title": "Color Temperature",
        "type": "object",
        "properties": {
          "setUrl": {
            "type": "string",
            "title": "setUrl",
            "required": true,
            "placeholder": "http://localhost/temp/%s"
          },
          "statusUrl": {
            "type": "string",
            "title": "statusUrl",
            "placeholder": "http://localhost/status"
          },
          "unit": {
            "type": "string",
            "enum": ["mired", "kelvin"],
            "placeholder": "mired",
            "title": "Unit"
          },
          "minValue": {
            "type": "integer",
            "title": "Min Value",
            "placeholder": 50
          },
          "maxValue": {
            "type": "integer",
            "title": "Max Value",
            "placeholder": 400
          },
          "statusPattern": {
            "type": "string",
            "title": "Status Pattern (RegExp)",
            "placeholder": "([0-9]{2,3})"
          },
          "patternGroupToExtract": {
            "type": "integer",
            "title": "Pattern Group To Extract",
            "placeholder": 1
          }
        }
      },
      "auth": {
        "title": "HTTP Authentication",
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        }
      },
      "statusCache": {
        "type": "integer",
        "title": "Power Status Cache (milliseconds)",
        "placeholder": 0
      },
      "brightnessCache": {
        "type": "integer",
        "title": "Brightness Cache (milliseconds)",
        "placeholder": 0
      },
      "hueCache": {
        "type": "integer",
        "title": "Hue Cache (milliseconds)",
        "placeholder": 0
      },
      "saturationCache": {
        "type": "integer",
        "title": "Saturation Cache (milliseconds)",
        "placeholder": 0
      },
      "colorTemperatureCache": {
        "type": "integer",
        "title": "Color Temperature Cache (milliseconds)",
        "placeholder": 0
      },
      "pullInterval": {
        "type": "integer",
        "title": "Pull Interval (milliseconds)",
        "placeholder": 0
      },
      "mqtt": {
        "title": "MQTT Options",
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "title": "MQTT Host",
            "required": true
          },
          "port": {
            "type": "integer",
            "title": "MQTT Port",
            "placeholder": 1883
          },
          "credentials": {
            "type": "object",
            "title": "MQTT Credentials",
            "properties": {
              "username": {
                "type": "string",
                "title": "MQTT Username",
                "required": true
              },
              "password": {
                "type": "string",
                "title": "MQTT Password"
              }
            }
          },
          "subscriptions": {
            "type": "array",
            "title": "MQTT Subscriptions",
            "required": true,
            "items": {
              "type": "object",
              "properties": {
                "topic": {
                  "type": "string",
                  "title": "MQTT Topic",
                  "required": true
                },
                "characteristic": {
                  "type": "string",
                  "title": "Characteristic",
                  "required": true
                },
                "messagePattern": {
                  "type": "string",
                  "title": "Message Pattern (RegExp)"
                },
                "patternGroupToExtract": {
                  "type": "integer",
                  "title": "Pattern Group To Extract",
                  "placeholder": 1
                }
              }
            }
          },
          "protocol": {
            "type": "string",
            "title": "MQTT Protocol",
            "placeholder": "mqtt"
          },
          "qos": {
            "type": "integer",
            "title": "MQTT QoS",
            "enum": [0, 1, 2],
            "placeholder": 0
          },
          "clientId": {
            "type": "string",
            "title": "MQTT Client ID",
            "placeholder": "'mqttjs_' + Math.random().toString(16).substr(2, 8)"
          },
          "keepalive": {
            "type": "integer",
            "title": "MQTT Keepalive",
            "placeholder": 60
          },
          "clean": {
            "type": "boolean",
            "title": "MQTT Clean Session",
            "placeholder": true
          },
          "reconnectPeriod": {
            "type": "integer",
            "title": "MQTT Reconnect Period (milliseconds)",
            "placeholder": 1000
          },
          "connectTimeout": {
            "type": "integer",
            "title": "MQTT Connect Timeout (milliseconds)",
            "placeholder": 30000
          }
        }
      },
      "setPowerTopic": {
        "type": "object",
        "title": "MQTT Set Power Topic",
        "properties": {
          "topic": {
            "type": "string",
            "title": "MQTT Topic",
            "required": true
          },
          "qos": {
            "type": "integer",
            "title": "MQTT QoS",
            "enum": [0, 1, 2],
            "placeholder": 0
          },
          "retain": {
            "type": "boolean",
            "title": "MQTT Retain",
            "placeholder": false
          },
          "dup": {
            "type": "boolean",
            "title": "MQTT Duplicate",
            "placeholder": false
          },
          "payloadFormatter": {
            "type": "string",
            "title": "MQTT Payload Formatter"
          }
        }
      },
      "getPowerTopic": {
        "type": "object",
        "title": "MQTT Get Power Topic",
        "properties": {
          "topic": {
            "type": "string",
            "title": "MQTT Topic",
            "required": true
          },
          "qos": {
            "type": "integer",
            "title": "MQTT QoS",
            "enum": [0, 1, 2],
            "placeholder": 0
          },
          "messagePattern": {
            "type": "string",
            "title": "Message Pattern (RegExp)"
          },
          "patternGroupToExtract": {
            "type": "integer",
            "title": "Pattern Group To Extract",
            "placeholder": 1
          }
        }
      },
      "notificationID": {
        "type": "string",
        "title": "Notification ID"
      },
      "notificationPassword": {
        "type": "string",
        "title": "Notification Password"
      }
    }
  },
  "layout":[
    {
    	"type": "flex",
      "flex-flow": "row wrap",
      "items": [
        "name"
      ]
    },
    {
      "type": "fieldset",
      "title": "Basic",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "onUrl",
        "offUrl",
        "statusUrl",
        "statusPattern"
      ]
    },
    {
      "type": "fieldset",
      "title": "Brightness",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "brightness.setUrl",
        "brightness.statusUrl",
        "brightness.unit",
        "brightness.statusPattern",
        "brightness.patternGroupToExtract",
        "brightness.withholdPowerUpdate"
      ]
    },
    {
      "type": "fieldset",
      "title": "hue",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "hue.setUrl",
        "hue.statusUrl",
        "hue.unit",
        "hue.statusPattern",
        "hue.patternGroupToExtract"
      ]
    },
    {
      "type": "fieldset",
      "title": "Saturation",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "saturation.setUrl",
        "saturation.statusUrl",
        "saturation.unit",
        "saturation.statusPattern",
        "saturation.patternGroupToExtract"
      ]
    },
    {
      "type": "fieldset",
      "title": "Color Temperature",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "colorTemperature.setUrl",
        "colorTemperature.statusUrl",
        "colorTemperature.unit",
        "colorTemperature.statusPattern",
        "colorTemperature.patternGroupToExtract"
      ]
    },
    {
      "type": "fieldset",
      "title": "HTTP Authentication",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "auth.username",
        "auth.password"
      ]
    },
    {
      "type": "fieldset",
      "title": "Advanced",
      "expandable": true,
      "flex-flow": "column wrap",
      "displayFlex": true,
      "flex-direction": "column",
      "items": [
        "statusCache",
        "brightnessCache",
        "hueCache",
        "saturationCache",
        "colorTemperatureCache",
        "pullInterval",
        {
          "type": "fieldset",
          "title": "MQTT Options",
          "expandable": true,
          "flex-flow": "column wrap",
          "displayFlex": true,
          "flex-direction": "column",
          "items": [
            "mqtt.host",
            "mqtt.port",
            {
              "type": "fieldset",
              "title": "Credentials",
              "expandable": true,
              "flex-flow": "column wrap",
              "displayFlex": true,
              "flex-direction": "column",
              "items": [
                "mqtt.credentials.username",
                "mqtt.credentials.password"
              ]
            },
            {
              "type": "fieldset",
              "title": "MQTT Subscriptions",
              "expandable": true,
              "flex-flow": "column wrap",
              "displayFlex": true,
              "flex-direction": "column",
              "items": [
                  "mqtt.subscriptions.topic",
                  "mqtt.subscriptions.characteristic",
                  "mqtt.subscriptions.messagePattern",
                  "mqtt.subscriptions.patternGroupToExtract"
              ]
            },
            "mqtt.protocol",
            "mqtt.qos",
            "mqtt.clientId",
            "mqtt.keepalive",
            "mqtt.clean",
            "mqtt.reconnectPeriod",
            "mqtt.connectTimeout"
          ]
        },
        {
          "type": "fieldset",
          "title": "MQTT Set Power Topic",
          "expandable": true,
          "flex-flow": "column wrap",
          "displayFlex": true,
          "flex-direction": "column",
          "items": [
            "setPowerTopic.topic",
            "setPowerTopic.qos",
            "setPowerTopic.retain",
            "setPowerTopic.dup",
            "setPowerTopic.payloadFormatter"
          ]
        },
        {
          "type": "fieldset",
          "title": "MQTT Get Power Topic",
          "expandable": true,
          "flex-flow": "column wrap",
          "displayFlex": true,
          "flex-direction": "column",
          "items": [
            "getPowerTopic.topic",
            "getPowerTopic.qos",
            "getPowerTopic.messagePattern",
            "getPowerTopic.patternGroupToExtract"
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "title": "Notification Server",
      "expandable": true,
      "flex-flow": "row wrap",
      "displayFlex": true,
      "flex-direction": "row",
      "items": [
        "notificationID",
        "notificationPassword"
      ]
    }
  ]
}
